@using Net12.Maze
@using Net12.Maze.Cells
@using Net12.Maze.Cells.Enemies
@model MazeLevel

@section Scripts{
<script src="~/js/signalr/dist/browser/signalr.min.js"></script>
<script src="~/js/MazeKeyDown.js"></script>
}

<div class="menu-maze-difficult">
    <a href="/Maze/AddMazeDifficult">Add Maze Difficult</a>
    <a href="/Maze/ManageMazeDifficult">Manage Maze Difficult</a>
    <a href="/Maze/Index">Create Maze</a>
</div>

<div>
    <span class="myHealth">My Health: @Model.Hero.Hp/@Model.Hero.Max_hp</span>
    <span class="myFatigue">My Fatigue: @Model.Hero.CurrentFatigue/@Model.Hero.MaxFatigue</span>
    <span class="myMoney">My Money: @Model.Hero.Money</span>
    <span class="myStatus">Game Status: @Model.Message</span>
    @if (Model.ExitStatus)
    {
        <span class="exitStatus">Exit Status: Open</span>
    }
            else
            {
               <span class="exitStatus">Exit Status: Close</span>
            }

</div>
<div class="endGame">TheEnd</div>
<div class="text-center">
    <h1 class="maze">Maze</h1>
    @for (int y = 0; y < Model.Height; y++)
    {
        <div class="fild" data-y="@y">
            @for (int x = 0; x < Model.Width; x++)
            {
                <span data-x="@x" data-y="@y">
                    @if (Model.Hero.X == x && Model.Hero.Y == y)
                    {
                        <img class="cellMaze" src="~/images/cells/Hero.jpg" />
                    }
                    else if (Model.Enemies.Any(e => e.X == x && e.Y == y))
                    {
                        <img class="cellMaze" 
                             src="~/images/cells/@(Model
                            .Enemies.First(e => e.X == x && e.Y == y).GetType().Name).jpg" />
                    }
                    else if (Model[x, y] is BaseCell)
                    {
                        <img class="cellMaze" src="~/images/cells/@(Model[x,y].GetType().Name).jpg" />
                    }
                </span>
            }
        </div>
    }
    <div>
        <div class="button-view-up">
            <input type="button" value="⬆" class="step" data-direction="1" />
        </div>
        <div class="button-view-down">
            <input type="button" value="◀" class="step" data-direction="3" />
            <input type="button" value="⬇" class="step" data-direction="2" />
            <input type="button" value="▶" class="step" data-direction="4" />
        </div>
    </div>
</div>


