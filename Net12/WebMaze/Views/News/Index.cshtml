@model PaggerViewModel<NewsViewModel>
@using WebMaze.EfStuff.Repositories
@using WebMaze.ResourceLocalization

@inject NewsCommentRepository newsCommentRepository

@section Scripts{
<script src="~/js/paggination.js"></script>
}


<div class="header">
    <h2>@News.NewsGreetings</h2>
    <div>
        <a href="/News/DownloadRecentNews">@News.Download</a>
    </div>
</div>

<div class="container">
    <form method="post" action="/News/Index">
        <fieldset class="form-group border p-3">
            <legend class="w-auto px-2">Searcher</legend>
            <div class="form-group">
                <label for="username">Column</label>
                <select name="ColumnName" class="form-select" aria-label="Default select example">
                    <option selected value="Title">Title</option>
                    <option value="Author">Author</option>
                    <option value="Text">Text of News</option>
                    <option value="CreationDate">Creation Date</option>
                    <option value="Location">Location</option>
                </select>
                <select name="typeSearch" class="form-select" aria-label="Default select example">
                    <option value="2">Contain</option>
                    <option value="1">Equal</option>
                </select>
                <input type="text" class="form-control password" id="MyText" placeholder="Text..." name="textSearch">
            </div>
            <button type="submit" class="btn btn-primary">Search</button>
        </fieldset>
    </form>
    <div class="row justify-content-center">
        <div>
            PerPage
            <select class="perPageOption">
                @foreach (var perPageOption in Model.PerPageOptions)
                {
                    var isSelectedStr = perPageOption == Model.PerPage
                    ? "selected"
                    : null;
                    <text>
                    <option value="@perPageOption" selected=@isSelectedStr>@perPageOption</option>
                    </text>
                }
            </select>
            <input type="hidden" value="@Model.CurrPage" class="CurrPage" />
            <input type="hidden" value="@Model.TotalPageCount" class="TotalPageCount" />
            <a href="" class="prev linkToPage">Prev</a>
            @if (Model.CurrPage > PaggerViewModel<object>.AdditionalElementsNearCurrent)
            {
                <a href="/News/Index?page=1&perPage=" class="linkToPage">page 1</a>
                <span>...</span>
            }
            @for (int i = Model.StartIndex; i < Model.EndIndex; i++)
            {
                <a href="/News/Index?page=@(i+1)&perPage="
               class="linkToPage @(i + 1 == Model.CurrPage ? "active" : "")">page @(i+1)</a>
            }

            @if (Model.CurrPage < Model.TotalPageCount - PaggerViewModel<object>.AdditionalElementsNearCurrent)
            {
                <span>...</span>
                <a href="/News/Index?page=@Model.TotalPageCount&perPage=" class="linkToPage">page @Model.TotalPageCount</a>
            }
            <a href="" class="next linkToPage">Next</a>

        </div>
        <table class="table table-bordered">
            <thead>
                <tr class="align-content-md-center">
                    <th scope="col"><a href="/News/Index?page=&perPage=&typeSorted=Title">@News.Title</a></th>
                    <th scope="col"><a href="/News/Index?page=&perPage=&typeSorted=Text">@News.Text</a></th>
                    <th scope="col"><a href="/News/Index?page=&perPage=&typeSorted=Location">@News.Location</th>
                    <th scope="col"><a href="/News/Index?page=&perPage=&typeSorted=EventDate">@News.Date_of_event</a></th>
                    <th scope="col"><a href="/News/Index?page=&perPage=&typeSorted=Author.Name">@News.Author</a></th>
                    <th scope="col"><a href="/News/Index?page=&perPage=&typeSorted=CreationDate">@News.Date_of_creation</a></th>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <th scope="col">@News.Assessment</th>
                        <th scope="col">@News.Actions</th>
                    }

                </tr>
            </thead>

            <tbody>
                @foreach (var news in Model.Records)
                {
                    <tr>
                        <td>
                            <span>@news.Title</span>
                        </td>
                        <td>
                            <span>@news.Text</span>
                        </td>

                        <td>
                            <span>@news.Location</span>
                        </td>
                        <td>
                            <span>@news.EventDate.ToShortDateString()</span>
                        </td>
                        <td class="global-user-rating">
                            <p>@news.NameOfAuthor</p>
                            <p class="@(news.GlobalUserRating > 0 ? "rich" : "poor")">@news.GlobalUserRating</p>
                        </td>
                        <td>
                            <span>@news.CreationDate.ToShortDateString()</span>
                        </td>

                        @if (User.Identity.IsAuthenticated)
                        {
                            var listcomments = newsCommentRepository.GetAllId(news.Id);
                            <td>
                                <span>
                                    <a href="@Url.Action("Wonderful","News", new {@newsId = news.Id})" class="good-button">@News.Wonderful</a>
                                    <a href="@Url.Action("Awful","News", new {@newsId = news.Id})" class="bad-button">Awful</a>

                                </span>
                            </td>
                            <td>
                                <a href="/News/RemoveNews?newsId=@news.Id">X</a>
                                <a href="/News/AddNews?newsId=@news.Id">E</a>
                                <p>
                                    <a href="/NewsComment/Index?newsId=@news.Id">@listcomments.Count() @News.Comments</a>
                                </p>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>



    @if (User.Identity.IsAuthenticated)
    {
        <p>
            <a href="/News/AddNews" style="color:red; font-size:x-large">@News.Add &raquo;</a>
        </p>
    }

</div>
